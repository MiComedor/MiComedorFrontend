import {
  Tabs_default
} from "./chunk-WIAMFWNK.js";
import "./chunk-DJB7IGVP.js";
import "./chunk-ZGKNQLLN.js";
import "./chunk-QWLRMBWP.js";
import "./chunk-GNM62ZLU.js";
import "./chunk-MDA7CVI3.js";
import "./chunk-ECYZ5CS7.js";
import "./chunk-WP2SZE7E.js";
import "./chunk-UQX45JZF.js";
import "./chunk-P3EDQSHT.js";
import "./chunk-CA2VJQTW.js";
import "./chunk-YK6YG65C.js";
import "./chunk-GDGBM5H6.js";
import "./chunk-Q6YJHUAD.js";
import {
  getPanelId,
  getTabId,
  useTabContext
} from "./chunk-U7BRBQHQ.js";
import "./chunk-6RCI2R4Z.js";
import "./chunk-W3TMGV3M.js";
import "./chunk-AVX3GOC4.js";
import "./chunk-UN2PQ2Y4.js";
import "./chunk-GLCRHU4I.js";
import "./chunk-GYFTDCHW.js";
import "./chunk-JXNUGF7W.js";
import "./chunk-EMDMYP7A.js";
import "./chunk-NSYRUVVQ.js";
import "./chunk-GVXOPOTP.js";
import "./chunk-3NYDLQRB.js";
import "./chunk-3AHH26YP.js";
import "./chunk-N3WLQJDX.js";
import "./chunk-SUKWBJGI.js";
import "./chunk-ELI2RP5O.js";
import "./chunk-CE4D5GXH.js";
import "./chunk-HHE3HFEN.js";
import "./chunk-H4GSM2WL.js";
import {
  require_prop_types
} from "./chunk-IHHQCSQY.js";
import "./chunk-EBVFFPOK.js";
import {
  require_jsx_runtime
} from "./chunk-RCERJUAA.js";
import {
  require_react
} from "./chunk-VQORH22F.js";
import {
  __toESM
} from "./chunk-DC5AMYBS.js";

// node_modules/@mui/lab/esm/TabList/TabList.js
var React = __toESM(require_react(), 1);
var import_prop_types = __toESM(require_prop_types(), 1);
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var TabList = React.forwardRef(function TabList2(props, ref) {
  const {
    children: childrenProp,
    ...other
  } = props;
  const context = useTabContext();
  if (context === null) {
    throw new TypeError("No TabContext provided");
  }
  const children = React.Children.map(childrenProp, (child) => {
    if (!React.isValidElement(child)) {
      return null;
    }
    return React.cloneElement(child, {
      // SOMEDAY: `Tabs` will set those themselves
      "aria-controls": getPanelId(context, child.props.value),
      id: getTabId(context, child.props.value)
    });
  });
  return (0, import_jsx_runtime.jsx)(Tabs_default, {
    ...other,
    ref,
    value: context.value,
    children
  });
});
true ? TabList.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A list of `<Tab />` elements.
   */
  children: import_prop_types.default.node
} : void 0;
var TabList_default = TabList;
export {
  TabList_default as default
};
//# sourceMappingURL=@mui_lab_TabList.js.map
