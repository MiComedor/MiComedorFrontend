import {
  appendOwnerState_default,
  mergeSlotProps_default,
  resolveComponentProps_default
<<<<<<<< HEAD:mi-comedor/node_modules/.vite/deps/chunk-N4KTQNYR.js
} from "./chunk-TLPZTDQ4.js";
import {
  useForkRef
} from "./chunk-LSAMZJAR.js";
========
} from "./chunk-4AF55K6F.js";
import {
  useForkRef
} from "./chunk-QA4QSPRU.js";
>>>>>>>> 313bacbc0894ec8c9806c836b0fc24210ef305fd:mi-comedor/node_modules/.vite/deps/chunk-GMBD3RBC.js

// node_modules/@mui/utils/esm/useSlotProps/useSlotProps.js
function useSlotProps(parameters) {
  var _a;
  const {
    elementType,
    externalSlotProps,
    ownerState,
    skipResolvingSlotProps = false,
    ...other
  } = parameters;
  const resolvedComponentsProps = skipResolvingSlotProps ? {} : resolveComponentProps_default(externalSlotProps, ownerState);
  const {
    props: mergedProps,
    internalRef
  } = mergeSlotProps_default({
    ...other,
    externalSlotProps: resolvedComponentsProps
  });
  const ref = useForkRef(internalRef, resolvedComponentsProps == null ? void 0 : resolvedComponentsProps.ref, (_a = parameters.additionalProps) == null ? void 0 : _a.ref);
  const props = appendOwnerState_default(elementType, {
    ...mergedProps,
    ref
  }, ownerState);
  return props;
}
var useSlotProps_default = useSlotProps;

// node_modules/@mui/material/esm/utils/isHostComponent.js
function isHostComponent(element) {
  return typeof element === "string";
}
var isHostComponent_default = isHostComponent;

export {
  useSlotProps_default,
  isHostComponent_default
};
<<<<<<<< HEAD:mi-comedor/node_modules/.vite/deps/chunk-N4KTQNYR.js
//# sourceMappingURL=chunk-N4KTQNYR.js.map
========
//# sourceMappingURL=chunk-GMBD3RBC.js.map
>>>>>>>> 313bacbc0894ec8c9806c836b0fc24210ef305fd:mi-comedor/node_modules/.vite/deps/chunk-GMBD3RBC.js
