{
  "version": 3,
  "sources": ["../../@mui/utils/esm/useLazyRef/useLazyRef.js", "../../@mui/utils/esm/useOnMount/useOnMount.js", "../../@mui/utils/esm/useTimeout/useTimeout.js"],
  "sourcesContent": ["'use client';\r\n\r\nimport * as React from 'react';\r\nconst UNINITIALIZED = {};\r\n\r\n/**\r\n * A React.useRef() that is initialized lazily with a function. Note that it accepts an optional\r\n * initialization argument, so the initialization function doesn't need to be an inline closure.\r\n *\r\n * @usage\r\n *   const ref = useLazyRef(sortColumns, columns)\r\n */\r\nexport default function useLazyRef(init, initArg) {\r\n  const ref = React.useRef(UNINITIALIZED);\r\n  if (ref.current === UNINITIALIZED) {\r\n    ref.current = init(initArg);\r\n  }\r\n  return ref;\r\n}", "'use client';\r\n\r\nimport * as React from 'react';\r\nconst EMPTY = [];\r\n\r\n/**\r\n * A React.useEffect equivalent that runs once, when the component is mounted.\r\n */\r\nexport default function useOnMount(fn) {\r\n  // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- no need to put `fn` in the dependency array\r\n  /* eslint-disable react-hooks/exhaustive-deps */\r\n  React.useEffect(fn, EMPTY);\r\n  /* eslint-enable react-hooks/exhaustive-deps */\r\n}", "'use client';\r\n\r\nimport useLazyRef from \"../useLazyRef/useLazyRef.js\";\r\nimport useOnMount from \"../useOnMount/useOnMount.js\";\r\nexport class Timeout {\r\n  static create() {\r\n    return new Timeout();\r\n  }\r\n  currentId = null;\r\n\r\n  /**\r\n   * Executes `fn` after `delay`, clearing any previously scheduled call.\r\n   */\r\n  start(delay, fn) {\r\n    this.clear();\r\n    this.currentId = setTimeout(() => {\r\n      this.currentId = null;\r\n      fn();\r\n    }, delay);\r\n  }\r\n  clear = () => {\r\n    if (this.currentId !== null) {\r\n      clearTimeout(this.currentId);\r\n      this.currentId = null;\r\n    }\r\n  };\r\n  disposeEffect = () => {\r\n    return this.clear;\r\n  };\r\n}\r\nexport default function useTimeout() {\r\n  const timeout = useLazyRef(Timeout.create).current;\r\n  useOnMount(timeout.disposeEffect);\r\n  return timeout;\r\n}"],
  "mappings": ";;;;;;;;;AAEA,YAAuB;AACvB,IAAM,gBAAgB,CAAC;AASR,SAAR,WAA4B,MAAM,SAAS;AAChD,QAAM,MAAY,aAAO,aAAa;AACtC,MAAI,IAAI,YAAY,eAAe;AACjC,QAAI,UAAU,KAAK,OAAO;AAAA,EAC5B;AACA,SAAO;AACT;;;AChBA,IAAAA,SAAuB;AACvB,IAAM,QAAQ,CAAC;AAKA,SAAR,WAA4B,IAAI;AAGrC,EAAM,iBAAU,IAAI,KAAK;AAE3B;;;ACTO,IAAM,UAAN,MAAM,SAAQ;AAAA,EAAd;AAIL,qCAAY;AAYZ,iCAAQ,MAAM;AACZ,UAAI,KAAK,cAAc,MAAM;AAC3B,qBAAa,KAAK,SAAS;AAC3B,aAAK,YAAY;AAAA,MACnB;AAAA,IACF;AACA,yCAAgB,MAAM;AACpB,aAAO,KAAK;AAAA,IACd;AAAA;AAAA,EAvBA,OAAO,SAAS;AACd,WAAO,IAAI,SAAQ;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,OAAO,IAAI;AACf,SAAK,MAAM;AACX,SAAK,YAAY,WAAW,MAAM;AAChC,WAAK,YAAY;AACjB,SAAG;AAAA,IACL,GAAG,KAAK;AAAA,EACV;AAUF;AACe,SAAR,aAA8B;AACnC,QAAM,UAAU,WAAW,QAAQ,MAAM,EAAE;AAC3C,aAAW,QAAQ,aAAa;AAChC,SAAO;AACT;",
  "names": ["React"]
}
